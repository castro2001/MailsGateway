@model Application.DTO.Mail.EmailMessageBase
@using System.IO


<ul class="mailbox-attachments d-flex align-items-stretch clearfix">

    @if (Model.Adjuntos != null && Model.Adjuntos.Any(a => a.EsImagen))
    {
        
        @foreach (var imagen in Model.Adjuntos.Where(a => a.EsImagen))
        {
            var base64 = Convert.ToBase64String(imagen.Datos);
            var dataUrl = $"data:{imagen.TipoMime};base64,{base64}";
            var nombreArchivo = Uri.EscapeDataString(imagen.Nombre);
            /*Logica para mostrar el tamaño de un archivo */
            long tamanioBytes = imagen.Datos.Length;

            string tamanioTexto = tamanioBytes

            switch
            {
            >= 1024 * 1024 => $"{(tamanioBytes / 1024.0 / 1024.0):0.##} MB",
            >= 1024 => $"{(tamanioBytes / 1024.0):0.#} KB",
            _ => $"{tamanioBytes} bytes"
            };
                        

            <li>
                <span class="mailbox-attachment-icon has-img">
                    <img src="@dataUrl" alt="@imagen.Nombre" style="height:260px">
                </span>

                <div class="mailbox-attachment-info ">
                    <a href="@dataUrl" download="@nombreArchivo" class="mailbox-attachment-name"><i class="fas fa-camera"></i> @imagen.Nombre</a>
                    <span class="mailbox-attachment-size clearfix mt-1">
                        <span>@tamanioTexto</span>
                        <a href="@dataUrl" download="@nombreArchivo" class="btn btn-default btn-sm float-right"><i class="fas fa-cloud-download-alt"></i></a>
                    </span>
                </div>
            </li>

        }

  }

  
</ul>
 